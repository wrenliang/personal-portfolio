{"version":3,"sources":["Assets/projects-personal-website.png","Assets/projects-sprouts.png","Assets/projects-keepfresh.png","Assets/jarvis-robot.png","Assets/profile-pic-compressed.png","Assets/website-resume.pdf","Assets/mountietocat.png","Components/Navigation/Navigation.js","Components/Homepage/Homepage.js","Components/Skills/SkillCard.js","Components/Skills/Skills.js","Components/Projects/MapIcon.js","Components/Projects/ProjectCard.js","Components/TitleBlock/TitleBlock.js","Components/Projects/ProjectSlide.js","Components/Projects/Projects.js","Components/Contact/ContactCard.js","Components/Contact/ContactPage.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","Button","onClick","window","location","href","variant","size","fullpage_api","moveTo","React","Component","Homepage","id","fade","mask","children","interval","adjustingSpeed","springConfig","stiffness","damping","SkillCard","SkillList","props","skills","map","skill","key","class","text","this","title","Skills","global_mapIcon","name","icon","img","color","faSwift","faJava","faPython","faCss3Alt","faHtml5","faJsSquare","faReact","faBootstrap","faNode","faRaspberryPi","faCoffee","faGithub","faTerminal","faLaptopCode","faFileAlt","faInbox","faLinkedin","faMobile","faUserLock","faServer","ProjectCard","toggleHover","console","log","setState","state","isHovered","arr","icons","push","hoverStyle","backgroundColor","hoverColor","onMouseEnter","onMouseLeave","slideNo","style","description","noHoverStyle","backgroundImage","noHoverColor","TitleBlock","fontSize","titleSize","descriptionSize","ProjectSlide","buttons","button","iconName","link","open","descriptions","descriptionLong","sections","section","index","paragraphs","contents","content","bgColor","descriptionShort","alt","src","bgImage","Projects","githubIcon","keepfreshCard","sproutsCard","portfolioCard","jarvisCard","keepfreshSlide","KeepfreshImage","sproutsSlide","SproutsImage","portfolioSlide","PortfolioImage","jarvisSlide","JarvisImage","require","ContactCard","resumeIcon","emailIcon","linkedInIcon","Image","ProfilePic","roundedCircle","Resume","ContactPage","App","Fullpage","licenseKey","scrollingSpeed","render","fullpageApi","Wrapper","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a4b9407.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/projects-personal-website.4f904577.png\";","module.exports = __webpack_public_path__ + \"static/media/projects-sprouts.ddffece8.png\";","module.exports = __webpack_public_path__ + \"static/media/projects-keepfresh.cf6924f3.png\";","module.exports = __webpack_public_path__ + \"static/media/jarvis-robot.4503d66a.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-pic-compressed.2cff85eb.png\";","module.exports = __webpack_public_path__ + \"static/media/website-resume.c20e1142.pdf\";","module.exports = __webpack_public_path__ + \"static/media/mountietocat.929e19b4.png\";","import React from 'react';\n\n// Dependant Components\nimport { Button } from 'react-bootstrap';\n\n// CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Navigation.css';\n\n\nclass Navigation extends React.Component {\n\n    render () {\n        return (\n            <div className=\"Navigation\">\n                <div className=\"Navigation-left\">\n                    <Button \n                    onClick={() => { window.location.href = \"\" }} \n                    variant=\"custom\" size=\"lg\"> Wren Liang </Button>\n                </div>\n                <div className=\"Navigation-right\">\n                    <Button onClick={() => window.fullpage_api.moveTo(2,0)} variant=\"custom\" size=\"lg\"> Skills </Button>\n                    <Button onClick={() => window.fullpage_api.moveTo(3,0)} variant=\"custom\" size=\"lg\"> Projects </Button>\n                    <Button onClick={() => window.fullpage_api.moveTo(4,0)} variant=\"custom\" size=\"lg\"> Contact/Resume </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport TextLoop from 'react-text-loop';\n\n// Dependant Components\n\n// CSS\nimport './Homepage.css';\n\nclass Homepage extends React.Component {\n    render() {\n        const roles = [\n            \"a Computer Engineering student\",\n            \"an iOS Developer\",\n            \"a Software Development Intern\"\n        ]\n        const locations = [\n            \"The University of British Columbia\",\n            \"UBC Launch Pad\",\n            \"Orbis Investments Canada\"\n        ]\n\n        return (\n            <div className=\"section\" id=\"Homepage\">\n                <div className=\"Homepage-main-wrapper\">\n                    <div className=\"Homepage-welcome-message-wrapper\">\n                        <h1 id=\"Homepage-welcome-message\"> Wren Liang </h1>\n                    </div>\n                    <div className=\"Homepage-description-wrapper\">\n                        <div className=\"Homepage-who-i-am-wrapper\">\n                            <h1>I am <TextLoop className=\"Homepage-animated-text\" fade={true} mask={true} children={roles}\n                                interval={4000} adjustingSpeed={750} springConfig={{\n                                    stiffness: 300,\n                                    damping: 30\n                                }}\n                                ></TextLoop>\n                            </h1>\n                        </div>\n                        <div className=\"Homepage-where-i-am-wrapper\">\n                            <h1> at <TextLoop className=\"Homepage-animated-text\" fade={true} mask={true} children={locations}\n                                interval={4000} adjustingSpeed={750} springConfig={{\n                                    stiffness: 300,\n                                    damping: 30\n                                }}\n                                \n                                ></TextLoop>.\n                            </h1>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"Homepage-caption-wrapper\">\n                    <p className=\"Homepage-caption\">\n                        Kananaskis Country <br/>\n                        Alberta, Canada <br/>\n                        © 2019 Noah Edwards & Wren Liang \n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Homepage;","import React from 'react';\n\n// Dependant Components\n\n// CSS\nimport './SkillCard.css';\n\n\nclass SkillCard extends React.Component {\n    SkillList = (props) => {\n        const skills = props.skills;\n        const skillList = skills.map((skill) => {\n            return (\n            <li key={skill.key} className={skill.class}>{skill.text}</li>\n            );\n        })\n\n        return(skillList);\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"SkillCard\">\n                <h2 className=\"SkillCard-title\">{this.props.title}</h2>\n                <ul className=\"SkillCard-list\">\n                    {this.SkillList(this.props)}\n                </ul>\n            </div>\n        );\n    }\n\n}\n\nexport default SkillCard;","import React from 'react';\n\n// Dependant Components\nimport SkillCard from './SkillCard';\n\n// CSS\nimport './Skills.css';\n\nclass Skills extends React.Component {\n    render() {\n        return (\n            <div className=\"section\" id=\"Skills\">\n                <div className=\"Skills-leftWrapper\">\n                    <h1 className=\"Skills-title\">Skills</h1>\n                    <h3 className=\"Skills-description\">My strengths are in <span className=\"Skills-iOS-tag\">iOS</span> and <span className=\"Skills-web-tag\">Web</span> development.</h3>\n                </div>\n                <div className=\"Skills-midWrapper\">\n                    <SkillCard title={'Languages'} skills={\n                        [\n                            {\n                                key: \"cplusplus\",\n                                text: \"C/C++\",\n                                class: \"SkillCard-list-li-standard\"\n                            },\n                            {\n                                key: \"java\",\n                                text: \"Java\",\n                                class: \"SkillCard-list-li-standard\"\n                            },\n                            {\n                                key: \"swift\",\n                                text: \"Swift\",\n                                class: \"SkillCard-list-li-ios\"\n                            },\n                            {\n                                key: \"html-css\",\n                                text: \"HTML/CSS\",\n                                class: \"SkillCard-list-li-web\"\n                            },\n                            {\n                                key: \"javascript\",\n                                text: \"JavaScript\",\n                                class: \"SkillCard-list-li-web\"\n                            }\n                        ]\n                    }/>\n                    <SkillCard title={'Tools'} skills={\n                        [\n                            {\n                                key: \"git\",\n                                text: \"Git\",\n                                class: \"SkillCard-list-li-standard\"\n                            },\n                            {\n                                key: \"xcode\",\n                                text: \"Xcode\",\n                                class: \"SkillCard-list-li-ios\"\n                            },\n                            {\n                                key: \"vscode\",\n                                text: \"VS Code\",\n                                class: \"SkillCard-list-li-web\"\n                            },\n                            {\n                                key: \"intellij\",\n                                text: \"IntelliJ IDEA\",\n                                class: \"SkillCard-list-li-standard\"\n                            },\n                            {\n                                key: \"postman\",\n                                text: \"Postman\",\n                                class: \"SkillCard-list-li-standard\"\n                            }\n                        ]\n                        }/>\n                </div>\n                <div className=\"Skills-rightWrapper\">\n                    <SkillCard title={'Frameworks'} skills={\n                        [\n                            {\n                                key: \"junit\",\n                                text: \"JUnit\",\n                                class: \"SkillCard-list-li-standard\"\n                            },\n                            {\n                                key: \"uikit\",\n                                text: \"UIKit\",\n                                class: \"SkillCard-list-li-ios\"\n                            },\n                            {\n                                key: \"spritekit\",\n                                text: \"SpriteKit\",\n                                class: \"SkillCard-list-li-ios\"\n                            },\n                            {\n                                key: \"react\",\n                                text: \"React\",\n                                class: \"SkillCard-list-li-web\"\n                            },\n                            {\n                                key: \"bootstrap\",\n                                text: \"Bootstrap\",\n                                class: \"SkillCard-list-li-web\"\n                            },\n                            {\n                                key: \"node\",\n                                text: \"Node.js & Express.js\",\n                                class: \"SkillCard-list-li-web\"\n                            }\n                        ]\n                        }>\n                    </SkillCard>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Skills;","// Font Awesome\nimport { faLinkedin, faBootstrap, faGithub, faSwift, faJava, faPython, faCss3Alt, faHtml5, faJsSquare, faReact, faNode, faRaspberryPi} from '@fortawesome/free-brands-svg-icons';\nimport { faServer ,faUserLock, faMobile, faInbox ,faLaptopCode, faTerminal, faCoffee ,faFileAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst global_mapIcon = (name) => {\n    var icon = {\n        img: null,\n        color: null\n    };\n\n    if (name === \"swift\") {\n        icon.img = faSwift;\n        icon.color = \"#FF9900\";\n    } else if (name === \"java\") {\n        icon.img = faJava;\n        icon.color = \"#D65645\";\n    } else if (name === \"python\") {\n        icon.img = faPython;\n        icon.color = \"#2E4A69\";\n    } else if (name === \"css\") {\n        icon.img = faCss3Alt;\n        icon.color = \"#4195D6\"\n    } else if (name === \"html\") {\n        icon.img = faHtml5;\n        icon.color = \"#E06D3C\";\n    } else if (name === \"javascript\") {\n        icon.img = faJsSquare;\n        icon.color = \"#F1DE4F\";\n    } else if (name === \"react\") {\n        icon.img = faReact;\n        icon.color = \"#62D5FB\";\n    } else if (name === \"bootstrap\") {\n        icon.img = faBootstrap;\n        icon.color = \"#8806CE\";\n    } else if (name === \"node\") {\n        icon.img = faNode;\n        icon.color = \"#138808\";\n    } else if (name === \"raspberry-pi\") {\n        icon.img = faRaspberryPi;\n        icon.color = \"#A72842\";\n    } else if (name === \"coffee\") {\n        icon.img = faCoffee;\n        icon.color = \"#7B3F00\";\n    } else if (name === \"github\") {\n        icon.img = faGithub;\n    } else if (name === \"terminal\") {\n        icon.img = faTerminal;\n    } else if (name === \"laptop-code\") {\n        icon.img = faLaptopCode;\n    } else if (name === \"resume\") {\n        icon.img = faFileAlt;\n    } else if (name === \"email\") {\n        icon.img = faInbox;\n    } else if (name === \"linkedin\") {\n        icon.img = faLinkedin;\n    } else if (name === \"phone\") {\n        icon.img = faMobile;\n    } else if (name === \"private\") {\n        icon.img = faUserLock;\n    } else if (name === \"server\") {\n        icon.img = faServer;\n        icon.color = \"#757575\";\n    }\n\n    return icon;\n}\n\n\n\n\nexport default global_mapIcon;","import React from 'react';\n\n// Dependant Components\n\n// CSS\nimport './ProjectCard.css';\n\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport global_mapIcon from './MapIcon';\n\nclass ProjectCard extends React.Component {\n    constructor() {\n        super();\n        this.state = {isHovered: false};\n    }\n\n    toggleHover = () => {\n        console.log('Toggle hover called');\n        this.setState(\n            (state) => (\n                {isHovered: !state.isHovered}\n            )\n        )\n    }\n    \n    render() {\n        var arr = [];\n        for (const name of this.props.icons) {\n            arr.push(global_mapIcon(name));\n        }\n\n        if (this.state.isHovered) {\n            const hoverStyle = {\n                backgroundColor: this.props.hoverColor\n            }\n\n            return (\n                <div className=\"ProjectCard\" onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover}\n                onClick={()=> {\n                    window.fullpage_api.moveTo(3, this.props.slideNo);\n                }}\n                style={hoverStyle}>\n                    <h1 className=\"ProjectCard-title\">{this.props.title}</h1>\n                    <p className=\"ProjectCard-description\">{this.props.description}</p>\n                    <div className=\"ProjectCard-icons\">\n                        <FontAwesomeIcon icon={arr[0].img} size=\"3x\" color={arr[0].color}/>\n                        <FontAwesomeIcon icon={arr[1].img} size=\"3x\" color={arr[1].color}/>\n                        <FontAwesomeIcon icon={arr[2].img} size=\"3x\" color={arr[2].color}/>\n                    </div>\n                </div>\n            );\n        } else {\n            const noHoverStyle = {\n                backgroundImage: \"none\",\n                backgroundColor: this.props.noHoverColor\n            }\n            return (\n                <div className=\"ProjectCard\" onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover}\n                style={noHoverStyle}>\n                    <h1 className=\"ProjectCard-title\">{this.props.title}</h1>\n                </div>\n            );\n        }\n        \n    }\n}\n\nexport default ProjectCard;","import React from 'react';\n\n// Dependant Components\n\n// CSS\nimport './TitleBlock.css';\n\n\nclass TitleBlock extends React.Component {\n\n    render() {\n        return (\n            <div className=\"TitleBlock\">\n                <h1 style={{fontSize: this.props.titleSize}} className=\"TitleBlock-title\">{this.props.title}</h1>\n                <p style={{fontSize: this.props.descriptionSize}} className=\"TitleBlock-description\">{this.props.description}</p>\n            </div>\n        );\n    }\n}\n\nexport default TitleBlock;","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\n// Dependant Components\nimport TitleBlock from '../TitleBlock/TitleBlock';\n\n// CSS\nimport './ProjectSlide.css';\n\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport global_mapIcon from './MapIcon';\n\nclass ProjectSlide extends React.Component {\n    render() {\n        var icons = []\n        for (const name of this.props.icons) {\n            icons.push(global_mapIcon(name));\n        }\n\n        const buttons = this.props.buttons.map( (button) => {\n            const icon = global_mapIcon(button.iconName);\n            return (\n                <Button onClick={ () => {\n                    if (button.link !== \"\") {\n                        window.open(button.link, '_blank');\n                    }\n                }} variant=\"outline-dark\" size=\"lg\"> \n                <FontAwesomeIcon icon={icon.img} size=\"1x\"/> \n                {` ${button.title}`}\n                </Button>\n            )\n        });\n\n        const descriptions = this.props.descriptionLong.sections.map( (section, index) => {\n            const paragraphs = section.contents.map((content, index) => {\n                return (\n                    <p key={index}>{content}</p>\n                );\n            })\n            return (\n                <div key={index} className=\"ProjectSlide-description-sections\">\n                    <h4>{section.title}</h4>\n                    {paragraphs}\n                </div>\n            );\n        });\n\n\n        return (\n            <div className=\"slide\" style={{backgroundColor: this.props.bgColor}}>\n                <div className=\"ProjectSlide-leftWrapper\">\n                    <TitleBlock title={this.props.title} titleSize={'72px'} description={this.props.descriptionShort} descriptionSize={'24px'}></TitleBlock>\n                    <div className=\"ProjectSlide-description-box\">\n                        <p className=\"ProjectSlide-extended-description\"> {descriptions}\n                        </p>\n                        <div className=\"ProjectSlide-icon-list\">\n                            <div className=\"ProjectSlide-icon-list-left\">\n                                <FontAwesomeIcon icon={icons[0].img} color={icons[0].color} size=\"4x\"/>\n                                <FontAwesomeIcon icon={icons[1].img} color={icons[1].color} size=\"4x\"/>\n                                <FontAwesomeIcon icon={icons[2].img} color={icons[2].color} size=\"4x\"/>\n                            </div>\n                            <div className=\"ProjectSlide-icon-list-right\">\n                                {buttons}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"ProjectSlide-rightWrapper\">\n                    <img className=\"ProjectSlide-main-img\" alt=\"Main Slide Background\" src={this.props.bgImage}></img>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default ProjectSlide;","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport '@fullpage/react-fullpage';\n\n// Dependant Components\nimport ProjectCard from './ProjectCard';\nimport TitleBlock from '../TitleBlock/TitleBlock';\nimport ProjectSlide from './ProjectSlide';\n\n// CSS\nimport './Projects.css';\n\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport global_mapIcon from './MapIcon';\n\n//Images\nimport PortfolioImage from '../../Assets/projects-personal-website.png';\nimport SproutsImage from '../../Assets/projects-sprouts.png';\nimport KeepfreshImage from '../../Assets/projects-keepfresh.png';\nimport JarvisImage from '../../Assets/jarvis-robot.png';\n\nclass Projects extends React.Component {\n    render() {\n        const githubIcon = global_mapIcon(\"github\");\n\n        // Card Data Models\n        const keepfreshCard = {\n            title: 'keepfresh',\n            description: 'Full-stack iOS app for cooking sustainably, developed at UBC Launch Pad',\n            icons: [\"swift\", \"node\", \"server\"],\n            hoverColor: \"#206030\",\n            noHoverColor: \"#50C878\",\n            slideNo: 1\n        }\n\n        const sproutsCard = {\n            title: 'Sprouts',\n            description: 'Plant care reminders app for iOS, built at nwHacks 2020',\n            icons: [\"swift\", \"javascript\", \"node\"],\n            hoverColor: \"#254B81\",\n            noHoverColor: \"#4A8CC8\",\n            slideNo: 2\n        }\n\n        const portfolioCard = {\n            title: 'Personal Website',\n            description: 'Online portfolio site for projects and experiences',\n            icons: [\"react\", \"bootstrap\", \"css\"],\n            hoverColor: \"#9B3A38\",\n            noHoverColor: \"#E17875\",\n            slideNo: 3\n        }\n\n        const jarvisCard = {\n            title: 'Jarvis Robot',\n            description: 'Autonomous line following robot that supports voice control and manual gyroscope driving mode',\n            icons: [\"swift\", \"python\", \"raspberry-pi\"],\n            hoverColor: \"#AB8027\",\n            noHoverColor: \"#FFE856\",\n            slideNo: 4\n        }\n\n\n        // Slide Data Models\n        const keepfreshSlide = {\n            title: \"keepfresh\",\n            descriptionShort: \"Full-stack iOS app to facilitate sustainable cooking\",\n            descriptionLong: {\n                sections: [\n                    {\n                        title: \"Background\",\n                        contents: [\"keepfresh is an iOS app I built with my team at UBC Launch Pad, a student-run software engineering team devoted to building projects in a collaborative, professional environment. The goal was to create an app that allows users to track the food in their homes, see when items were expiring, and recommend recipes based on their inventory.\"]\n                    }, {\n                        title: \"Technologies Used\",\n                        contents: [\n                            \"Design: Sketch, InVision, Figma\",\n                            \"Front-end: Swift\",\n                            \"Back-end: TypeScript, Node.js & Express.js, MongoDB Atlas, PostgreSQL\"\n                        ]\n                    }\n                ]\n            },\n            icons: [\"swift\", \"node\", \"server\"],\n            buttons: [\n                {\n                    title: \"GitHub Repo\",\n                    iconName: \"github\",\n                    link: \"https://github.com/ubclaunchpad/food-doods/tree/showcase\"\n                }\n            ],\n            bgColor: \"#50C878\",\n            bgImage: KeepfreshImage\n        }\n\n        const sproutsSlide = {\n            title: \"Sprouts\",\n            descriptionShort: \"Plant care reminders app for iOS, built at nwHacks 2020\",\n            descriptionLong: {\n                sections: [\n                    {\n                        title: \"Inspiration\",\n                        contents: [\"Interaction with indoor plants can reduce various forms of stress, based on previous psychological and neurological studies. Additionally, many people face the common issue of either forgetting to water their plants, or not knowing how to care for them properly. By making a terrarium-like app, our goal at nwHacks 2020 was to create a fun way for users to learn how to take care of plants and relieve their stress levels.\"]\n                    }, {\n                        title: \"Technologies Used\",\n                        contents: [\n                            \"Design: Sketch, InVision\",\n                            \"Front-end: Swift\",\n                            \"Back-end: JavaScript, Node.js & Express.js, MongoDB Atlas\"\n                        ]\n                    }\n                ]\n            },\n            icons: [\"swift\", \"javascript\", \"node\"],\n            buttons: [\n                {\n                    title: \"GitHub Repo\",\n                    iconName: \"github\",\n                    link: \"https://github.com/yan-alan/nwHacks2020-Sprouts\"\n                }, {\n                    title: \"Devpost\",\n                    iconName: \"laptop-code\",\n                    link: \"https://devpost.com/software/sprouts-7b83a1\"\n                }\n            ],\n            bgColor: \"#4A8CC8\",\n            bgImage: SproutsImage\n        }\n\n        const portfolioSlide = {\n            title: \"Personal Website\",\n            descriptionShort: \"Online portfolio for personal projects\",\n            descriptionLong: {\n                sections: [\n                    {\n                        title: \"Background\",\n                        contents: [\"I created my website to display the projects I was working on and the skills I had gained. However, in addition to accompanying my resume, my online portfolio has also allowed me to practice developing and maintaining websites using modern web technologies. For example, in a recent update, I completely remade my old HTML/CSS/JS website into the current version using JavaScript ES6 and the React.js framework.\"]\n                    },\n                    {\n                        title: \"Technologies Used\",\n                        contents: [\"JavaScript ES6, React.js, React-Bootstrap, fullPage.js, HTML/CSS\"]\n                    }\n                ]\n            },\n            icons: [\"react\", \"bootstrap\", \"css\"],\n            buttons: [\n                {\n                    title: \"GitHub Repo\",\n                    iconName: \"github\",\n                    link: \"https://github.com/wrenliang/personal-portfolio\"\n                }\n            ],\n            bgColor: \"#E26363\",\n            bgImage: PortfolioImage\n        }\n\n        const jarvisSlide = {\n            title: \"Jarvis Robot\",\n            descriptionShort: \"\",\n            descriptionLong: {\n                sections: [\n                    {\n                        title: \"Features\",\n                        contents: [\n                            \"This robot started off life as an assignment in one of our CPEN project courses. However, our team was energized by what we were building, so we decided to add many additional features to our robot, taking inspiration from the Iron Man movies.\",\n                            \"The accompanying iPad app we built includes a voice recognition assistant (hence the name Jarvis) that executes verbal commands. For example, in addition to the standard autonomous line following mode, you can activate a (very entertaining) manual drive mode using the iPad gyroscopes by simply saying “Jarvis, give me control.” While driving, the robot sends a live camera feed to the iPad to assist with navigation.\"\n                        ]\n                    },\n                    {\n                        title: \"Technologies Used\",\n                        contents: [\"Swift, Apple Speech Framework, Python, MQTT Network Protocol, Raspberry Pi, Soldering\"]\n                    }\n                ]\n            },\n            icons: [\"swift\", \"python\", \"raspberry-pi\"],\n            buttons: [\n                {\n                    title: \"Private project\",\n                    iconName: \"private\",\n                    link: \"\"\n                }\n            ],\n            bgColor: \"#F4C430\",\n            bgImage: JarvisImage\n        }\n\n        return (\n            <div className=\"section\" id=\"Projects\">\n                <div className=\"slide\">\n                    <div className=\"Projects-leftWrapper\">\n                        <div className=\"Projects-cardRow\">\n                            <ProjectCard {... keepfreshCard} />\n                            <ProjectCard {... sproutsCard} />\n                        </div>\n                        <h1 className=\"Projects-highlights-label\">Some highlights</h1>\n                        <div className=\"Projects-cardRow\">\n                            <ProjectCard {... portfolioCard} />\n                            <ProjectCard {... jarvisCard} />\n                        </div>\n                    </div>\n                    <div className=\"Projects-rightWrapper\">\n                        <TitleBlock title={'Projects'} description={\"Here's what I've been working on.\"}></TitleBlock>\n                        <div className=\"Projects-github-main\">\n                            <img className=\"Projects-octocat\" alt=\"GitHub Icon\" src={require('../../Assets/mountietocat.png')}></img>\n                            <br />\n\n                            <Button onClick={ () => {\n                                window.open('https://github.com/wrenliang', '_blank');\n                            }} variant=\"danger\" size=\"lg\">\n                                <FontAwesomeIcon icon={githubIcon.img} size=\"1x\"/> View on GitHub\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n                <ProjectSlide {... keepfreshSlide}></ProjectSlide>\n                <ProjectSlide {... sproutsSlide}></ProjectSlide>\n                <ProjectSlide {... portfolioSlide}></ProjectSlide>\n                <ProjectSlide {... jarvisSlide}></ProjectSlide>\n            </div>\n        )\n    }\n}\n\n\nexport default Projects;","import React from 'react';\nimport { Image, Button } from 'react-bootstrap';\n\nimport ProfilePic from '../../Assets/profile-pic-compressed.png';\n\n// Dependant Components\n\n// CSS\nimport './ContactCard.css';\n\n//FontAwesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport global_mapIcon from '../Projects/MapIcon';\n\nimport Resume from '../../Assets/website-resume.pdf';\n\nclass ContactCard extends React.Component {\n    render() {\n        const resumeIcon = global_mapIcon(\"resume\");\n        const emailIcon = global_mapIcon(\"email\");\n        const linkedInIcon = global_mapIcon(\"linkedin\");\n        const githubIcon = global_mapIcon(\"github\");\n        const email = \"wren.liang@gmail.com\";\n\n        return (\n            <div className=\"ContactCard\">\n                <div className=\"ContactCard-left\">\n                    <div className=\"ContactCard-profile\">\n                        <Image className=\"ContactCard-profile-pic\" src={ProfilePic} roundedCircle></Image>\n                        <div className=\"ContactCard-profile-text\">\n                            <h1 className=\"ContactCard-profile-name\"> Wren Liang </h1>\n                            <h3 className= \"ContactCard-profile-description\"> UBC Computer Engineering </h3>\n                        </div>\n                    </div>\n                    <div className=\"ContactCard-contact-buttons\">\n                            <Button onClick={ () => {\n                                window.location.href = `mailto:${email}`;\n                            }} variant=\"dark\" size=\"lg\">\n                                <FontAwesomeIcon icon={emailIcon.img} size=\"1x\"></FontAwesomeIcon>\n                                {` Email`}\n                            </Button>\n                            <Button onClick={ () => {\n                                window.open('https://www.linkedin.com/in/wren-liang/', '_blank');\n                            }} variant=\"dark\" size=\"lg\">\n                                <FontAwesomeIcon icon={linkedInIcon.img} size=\"1x\"></FontAwesomeIcon>\n                                {` LinkedIn`}\n                            </Button>\n                            <Button onClick={ () => {\n                                window.open('https://github.com/wrenliang', '_blank');\n                            }} variant=\"dark\" size=\"lg\">\n                                <FontAwesomeIcon icon={githubIcon.img} size=\"1x\"></FontAwesomeIcon>\n                                {` GitHub`}\n                            </Button>\n                    </div>\n                    \n                </div>\n                <div className=\"ContactCard-right\">\n                    <Button onClick={ () => {\n                        window.open(Resume, '_blank');\n                    }} variant=\"outline-light\">\n                        <FontAwesomeIcon icon={resumeIcon.img} size=\"10x\"></FontAwesomeIcon>\n                        <h3> <br/> Here's my resume.</h3>\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ContactCard;","import React from 'react';\n\n// Dependant Components\nimport ContactCard from './ContactCard';\n\n// CSS\nimport './ContactPage.css';\n\n\nclass ContactPage extends React.Component {\n    render() {\n        return (\n            <div className=\"section\" id=\"ContactPage\">\n                <div className=\"ContactPage-wrapper\">\n                    <h1> Let's get in touch </h1>\n                    <div className=\"ContactPage-businessCard\">\n                        <ContactCard></ContactCard>\n                    </div>\n                </div>\n                <div className=\"ContactPage-credits-wrapper\">\n                    <p >Created by Wren Liang © 2020</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ContactPage;","import React from 'react';\nimport ReactFullpage from '@fullpage/react-fullpage';\n\n// Dependant Components\nimport Navigation from '../Components/Navigation/Navigation';\nimport Homepage from '../Components/Homepage/Homepage';\nimport Skills from '../Components/Skills/Skills';\nimport Projects from '../Components/Projects/Projects';\nimport ContactPage from '../Components/Contact/ContactPage';\n\n// CSS\nimport './App.css';\n\n\nclass App extends React.Component {\n  render() {\n    const Fullpage = () => (\n      <ReactFullpage \n          licenseKey = {'k#7EkQX$k8'}\n          scrollingSpeed = {800}\n\n          render = { \n            ({state, fullpageApi}) => {\n              return (\n                  <ReactFullpage.Wrapper>\n                    <Homepage></Homepage>\n                    <Skills></Skills>\n                    <Projects></Projects>\n                    <ContactPage></ContactPage>\n                  </ReactFullpage.Wrapper>\n              );\n            }\n          }\n        />\n    )\n\n    return (\n      <div className=\"App\">\n        <Navigation ></Navigation>\n        <Fullpage ></Fullpage>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Dependant Components\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}